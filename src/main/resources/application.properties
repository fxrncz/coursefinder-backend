spring.application.name=demo
server.port=${PORT:8080}

# Server Configuration
server.tomcat.connection-timeout=20000
server.tomcat.keep-alive-timeout=15000
server.tomcat.max-connections=8192
server.tomcat.accept-count=100
server.threads.max=200

# Production logging
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Database Configuration (use env vars - REQUIRED for security)
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.validation-timeout=3000

# Production logging
logging.level.org.springframework=INFO
logging.level.org.hibernate=WARN
logging.level.com.app=INFO
logging.level.com.zaxxer.hikari=WARN

# Schema initialization
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql

# Resend (REQUIRED: Set as environment variables in Railway)
resend.api.key=${RESEND_API_KEY}
resend.from=${RESEND_FROM}
email.provider=${EMAIL_PROVIDER:resend}

# Provide via env var in production; for local dev you can uncomment and set a test value
# resend.api.key=
# resend.from=CourseFinder <no-reply@yourdomain.com>

# Frontend URL configuration
frontend.url=${FRONTEND_URL:https://coursefinder-sti.vercel.app}

# Backend URL configuration (for emails and PDF links)
backend.url=${BACKEND_URL:https://coursefinder-backend-production.up.railway.app}

# Seeder toggle
seed.enabled=${SEED_ENABLED:false}
seed.mbti.enabled=${SEED_MBTI_ENABLED:false}

# Jackson JSON serialization configuration
spring.jackson.time-zone=UTC
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss'Z'

# SendGrid
# Provide via env var or set here for dev only
# sendgrid.api.key=SG.xxxxxx
# sendgrid.from=CourseFinder <no-reply@yourdomain.com>

# Hugging Face AI Configuration (REQUIRED: Set API key as environment variable in Railway)
huggingface.api.key=${HUGGINGFACE_API_KEY}
huggingface.api.url=${HUGGINGFACE_API_URL:https://router.huggingface.co/hf-inference}
huggingface.validation.enabled=${HUGGINGFACE_VALIDATION_ENABLED:true}

# Model Selection (see HUGGINGFACE_MODEL_GUIDE.md for details)
# For development/testing (fast & free) - DISABLED (using paid plan)
# huggingface.model.validation=${HUGGINGFACE_VALIDATION_MODEL:microsoft/DialoGPT-medium}
# huggingface.model.education=${HUGGINGFACE_EDUCATION_MODEL:google/t5-base}

# For production (high quality) - ENABLED (paid plan)
huggingface.model.validation=${HUGGINGFACE_VALIDATION_MODEL:microsoft/DialoGPT-large}
huggingface.model.education=${HUGGINGFACE_EDUCATION_MODEL:EleutherAI/gpt-neo-2.7B}

# For high-volume (fast & cheap)
# huggingface.model.validation=${HUGGINGFACE_VALIDATION_MODEL:facebook/blenderbot-400M-distill}
# huggingface.model.education=${HUGGINGFACE_EDUCATION_MODEL:microsoft/DialoGPT-medium}

# Optimized settings for paid plan with high-quality models
huggingface.timeout=${HUGGINGFACE_TIMEOUT:60000}
huggingface.max.retries=${HUGGINGFACE_MAX_RETRIES:3}
huggingface.retry.delay=${HUGGINGFACE_RETRY_DELAY:2000}


